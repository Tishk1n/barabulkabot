import asyncio
import random

from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

import config
from create_bot import dp, bot
from data_base.sqlite_db import *
from keyboards import admin_kb
from states.admin import FSMAdmin
from states.mail import FSMMail


async def mailing(photo, text):
    g, e = 0, 0
    for user in Users.select():
        try:
            await bot.send_photo(user.id, photo, text, parse_mode='html')
            g += 1
        except:
            try:
                await bot.send_message(user.id, text, parse_mode='html')
                g += 1
            except:
                e += 1


def between_callback(photo, text):
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)

    loop.run_until_complete(mailing(photo, text))
    loop.close()


# –ü–æ–ª—É—á–∞–µ–º –∞–π–¥–∏ –∞–¥–º–∏–Ω–∞/–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
async def make_changes_command(message: types.Message):
    if message.from_user.id in config.admins:
        await bot.send_sticker(message.from_user.id,
                               'CAACAgEAAxkBAAEFmpxi_0jzvA9Iv9PMDPLwMvitTitZYAACIwkAAuN4BAABn1mg9roZ0DkpBA')
        await bot.send_message(message.from_user.id, 'üîì *–í—ã –≤–æ—à–ª–∏ –≤ –ø–∞–Ω–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞\!*',
                               reply_markup=admin_kb.button_case_admin)
        await message.delete()


# –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é
async def cm_start(message: types.Message):
    if message.from_user.id in config.admins:
        await FSMAdmin.photo.set()
        await bot.send_message(message.from_user.id, 'üì∑ *–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ*')


# –õ–æ–≤–∏–º –ø–µ—Ä–≤—ã–π –æ—Ç–≤–µ—Ç –∏ –ø–∏—à–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
async def load_photo(message: types.Message, state: FSMContext):
    if message.from_user.id in config.admins:
        async with state.proxy() as data:
            data['photo'] = message.photo[0].file_id
        await FSMAdmin.next()
        await bot.send_message(message.from_user.id, 'üìÉ *–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ*')


# –õ–æ–≤–∏–º –≤—Ç–æ—Ä–æ–π –æ—Ç–≤–µ—Ç
async def load_name(message: types.Message, state: FSMContext):
    if message.from_user.id in config.admins:
        async with state.proxy() as data:
            data['name'] = message.text
        await FSMAdmin.next()
        await bot.send_message(message.from_user.id, 'üìù *–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ*')


# –õ–æ–≤–∏–º —Ç—Ä–µ—Ç–∏–π –æ—Ç–≤–µ—Ç
async def load_description(message: types.Message, state: FSMContext):
    if message.from_user.id in config.admins:
        async with state.proxy() as data:
            data['description'] = message.text
        await FSMAdmin.next()
        await bot.send_message(message.from_user.id, 'üè∑ *–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É*')


# –õ–æ–≤–∏–º —á–µ—Ç–≤–µ—Ä—Ç—ã–π –æ—Ç–≤–µ—Ç –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
async def load_price(message: types.Message, state: FSMContext):
    if message.from_user.id in config.admins:
        async with state.proxy() as data:
            data['price'] = float(message.text)

            Products.create(id=random.randint(11111111, 99999999), photo=data['photo'], name=data['name'],
                            description=data['description'], price=data['price'])
            await bot.send_photo(
                message.from_user.id, data["photo"],
                f'üìÉ *–ù–∞–∑–≤–∞–Ω–∏–µ:* {data["name"]}\nüè∑ *–¶–µ–Ω–∞:* {data["price"]} RUB\nüìù *–û–ø–∏—Å–∞–Ω–∏–µ:*\n{data["description"]}'.replace('.', '\.'),
                parse_mode=None
            )
        await state.finish()


async def cancel_handler(message: types.Message):
    if message.from_user.id in config.admins:
        sql = Products.select()

        kb = InlineKeyboardMarkup(row_width=2)
        [kb.add(InlineKeyboardButton(text=product.name, callback_data='delete_' + str(product))) for product in sql]
        await bot.send_message(message.from_user.id, '‚ùå *–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:*', reply_markup=kb)


async def mail(message: types.Message):
    if message.from_user.id in config.admins:
        await FSMMail.photo.set()
        button_load = KeyboardButton('–ü—Ä–æ–ø—É—Å–∫')

        kb = ReplyKeyboardMarkup(resize_keyboard=True).add(button_load)
        await bot.send_message(message.from_user.id, 'üì∑ *–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ —Ä–∞—Å—Å—ã–ª–∫–∏*', reply_markup=kb)


@dp.message_handler(content_types=['photo'], state=FSMMail.photo)
async def mail2(message: types.Message, state: FSMContext):
    if message.from_user.id in config.admins:
        async with state.proxy() as data:
            try:
                data['photo'] = message.photo[0].file_id
            except:
                data['photo'] = None

        await FSMMail.next()
        await bot.send_message(message.from_user.id, '‚úâÔ∏è *–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏*')


@dp.message_handler(state=FSMMail.description)
async def mail3(message: types.Message, state: FSMContext):
    if message.from_user.id in config.admins:
        async with state.proxy() as data:
            data['description'] = message.text

            g, e = 0, 0
            for user in Users.select():
                try:
                    await bot.send_photo(user.id, data['photo'], data['description'], parse_mode='html')
                    g += 1
                except:
                    try:
                        await bot.send_message(user.id, data['description'], parse_mode='html')
                        g += 1
                    except:
                        e += 1

        await state.finish()
        await bot.send_message(message.from_user.id, f'üëç *–ü–æ–ª—É—á–∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ:* {g}\nüëé *–ù–µ –ø–æ–ª—É—á–∏–ª–∏:* {e}',
                               reply_markup=admin_kb)


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö–µ–Ω–¥–ª–µ—Ä—ã
def register_handlers_admin(dp: Dispatcher):
    dp.register_message_handler(cm_start, text=['üì• –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä'], state=None)
    dp.register_message_handler(load_photo, content_types=['photo'], state=FSMAdmin.photo)
    dp.register_message_handler(load_name, state=FSMAdmin.name)
    dp.register_message_handler(load_description, state=FSMAdmin.description)
    dp.register_message_handler(load_price, state=FSMAdmin.price)
    dp.register_message_handler(cancel_handler, text=['‚ùå –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä'], state=None)
    dp.register_message_handler(mail, text=['üîä –†–∞—Å—Å—ã–ª–∫–∞'], state=None)
    dp.register_message_handler(make_changes_command, commands=['moderator'], state='*')
